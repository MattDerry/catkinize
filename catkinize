#!/bin/bash

set -x
set -o errexit

git init
git add .
git commit -a -m 'Pre-catkinization checkin.'

stack_name=$(basename `pwd`)
mkdir $stack_name

cat > $stack_name/CMakeLists.txt <<EOF
cmake_minimum_required(VERSION 2.8)
project($stack_name)
catkin_project($stack_name
  LIBRARIES $stack_name
  INCLUDE_DIRS include
)

# Force our binaries to be public in /build/bin (not necessary)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)

# Rosdep & Ros dependencies
find_package(Boost)
find_package(ROS COMPONENTS catkin roscpp)
include_directories(${ROS_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})

# Add a library
add_library($stack_name src/$stack_name)
target_link_libraries($stack_name ${ROS_LIBRARIES} ${Boost_LIBRARIES})

install(TARGETS $stack_name
        ARCHIVE DESTINATION lib
        LIBRARY DESTINATION lib)
install(DIRECTORY include/
        DESTINATION include
        FILES_MATCHING PATTERN "*.h"
        PATTERN ".svn" EXCLUDE)
EOF

# This file is defined in REP 127.
cat > $stack_name/package.xml <<EOF
<package>
  <description brief="$stack_name">FIXME</description>
  <author email="FIXME">FIXME</author>
    ...
  <maintainer email="FIXME">FIXME</maintainer>
    ...
  <license>FIXME</license>

  <url>http://ros.org/wiki/$stack_name</url>
  <run_depend>PACKAGE_NAME</run_depend>
    ...
  <build_depend>PACKAGE_NAME</build_depend>
    ...
  <test_depend>PACKAGE_NAME</test_depend>
    ...

  <!-- Plugins go in here -->
  <export>
    <cpp cflags="-I${prefix}/srv/cpp" lflags="-l$stack_name"/>
  </export>

</package>
EOF

git add $stack_name
git rm stack.xml
git commit -a -m 'Convert using the catkinize utility.'

set +x
echo "
Please edit the files in $stack_name/ to make sure they are correct.
"

